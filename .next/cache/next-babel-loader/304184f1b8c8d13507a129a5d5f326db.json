{"ast":null,"code":"import { createWrapper } from \"next-redux-wrapper\";\nimport { applyMiddleware, compose, createStore } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport createSagaMiddleware from \"redux-saga\";\nimport rootSaga from \"../sagas\";\nimport reducer from \"../reducers/index\";\n\nconst configureStore = context => {\n  console.log(context);\n  const sagaMiddleware = createSagaMiddleware();\n  const middleware = [sagaMiddleware];\n  const enhancer = false ? compose(applyMiddleware(...middleware)) : composeWithDevTools(applyMiddleware(...middleware));\n  const store = createStore(reducer, enhancer);\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  return store;\n};\n\nconst wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"sources":["E:/happy-sonday_react/node-sns/store/configureStore.js"],"names":["createWrapper","applyMiddleware","compose","createStore","composeWithDevTools","createSagaMiddleware","rootSaga","reducer","configureStore","context","console","log","sagaMiddleware","middleware","enhancer","store","sagaTask","run","wrapper","debug"],"mappings":"AAAA,SAASA,aAAT,QAA8B,oBAA9B;AACA,SAASC,eAAT,EAA0BC,OAA1B,EAAmCC,WAAnC,QAAsD,OAAtD;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAOC,OAAP,MAAoB,mBAApB;;AAEA,MAAMC,cAAc,GAAIC,OAAD,IAAa;AAClCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACA,QAAMG,cAAc,GAAGP,oBAAoB,EAA3C;AACA,QAAMQ,UAAU,GAAG,CAACD,cAAD,CAAnB;AACA,QAAME,QAAQ,GACZ,QACIZ,OAAO,CAACD,eAAe,CAAC,GAAGY,UAAJ,CAAhB,CADX,GAEIT,mBAAmB,CAACH,eAAe,CAAC,GAAGY,UAAJ,CAAhB,CAHzB;AAIA,QAAME,KAAK,GAAGZ,WAAW,CAACI,OAAD,EAAUO,QAAV,CAAzB;AACAC,EAAAA,KAAK,CAACC,QAAN,GAAiBJ,cAAc,CAACK,GAAf,CAAmBX,QAAnB,CAAjB;AACA,SAAOS,KAAP;AACD,CAXD;;AAaA,MAAMG,OAAO,GAAGlB,aAAa,CAACQ,cAAD,EAAiB;AAC5CW,EAAAA,KAAK;AADuC,CAAjB,CAA7B;AAIA,eAAeD,OAAf","sourcesContent":["import { createWrapper } from \"next-redux-wrapper\";\r\nimport { applyMiddleware, compose, createStore } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport rootSaga from \"../sagas\";\r\nimport reducer from \"../reducers/index\";\r\n\r\nconst configureStore = (context) => {\r\n  console.log(context);\r\n  const sagaMiddleware = createSagaMiddleware();\r\n  const middleware = [sagaMiddleware];\r\n  const enhancer =\r\n    process.env.NODE_ENV === \"production\"\r\n      ? compose(applyMiddleware(...middleware))\r\n      : composeWithDevTools(applyMiddleware(...middleware));\r\n  const store = createStore(reducer, enhancer);\r\n  store.sagaTask = sagaMiddleware.run(rootSaga);\r\n  return store;\r\n};\r\n\r\nconst wrapper = createWrapper(configureStore, {\r\n  debug: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nexport default wrapper;\r\n"]},"metadata":{},"sourceType":"module"}