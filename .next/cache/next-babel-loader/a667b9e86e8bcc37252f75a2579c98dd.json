{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { HYDRATE } from \"next-redux-wrapper\";\nvar initalState = {\n  user: {\n    loginFl: false,\n    user: null,\n    signUpDate: {},\n    loginData: {}\n  },\n  post: {\n    mainPosts: []\n  }\n}; // const changeNickname = {\n//   type: \"CHANGE_NICKNAME\",\n//   data: \"wooseop\",\n// };\n//같은 액션 데이터만 동적으로 바꾸는 함수 , action creator\n// const changeNickname = (data) => {\n//   return {\n//     type: \"CHANGE_NICKNAME\",\n//     data,\n//   };\n// };\n\nexport var loginAction = function loginAction(data) {\n  return {\n    type: \"LOG_IN\",\n    data: data\n  };\n};\nexport var logoutAction = function logoutAction() {\n  return {\n    type: \"LOG_OUT\"\n  };\n}; //NOTE:(이전상태, 액션) => return 다음상태\n\nvar rootReducer = function rootReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initalState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case HYDRATE:\n      console.log(\"HYDRATE\", action);\n      return _objectSpread(_objectSpread({}, state), action.payload);\n\n    case \"LOG_IN\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        user: _objectSpread(_objectSpread({}, state.user), {}, {\n          loginFl: true,\n          user: action.data\n        })\n      });\n\n    case \"LOG_OUT\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        user: _objectSpread(_objectSpread({}, state.user), {}, {\n          loginFl: false,\n          user: null\n        })\n      });\n\n    default:\n      break;\n  }\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["E:/happy-sonday_react/node-sns/reducers/index.js"],"names":["HYDRATE","initalState","user","loginFl","signUpDate","loginData","post","mainPosts","loginAction","data","type","logoutAction","rootReducer","state","action","console","log","payload"],"mappings":";;;;;;AAAA,SAASA,OAAT,QAAwB,oBAAxB;AAEA,IAAMC,WAAW,GAAG;AAClBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,KADL;AAEJD,IAAAA,IAAI,EAAE,IAFF;AAGJE,IAAAA,UAAU,EAAE,EAHR;AAIJC,IAAAA,SAAS,EAAE;AAJP,GADY;AAOlBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,SAAS,EAAE;AADP;AAPY,CAApB,C,CAYA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,IAAD,EAAU;AACnC,SAAO;AACLC,IAAAA,IAAI,EAAE,QADD;AAELD,IAAAA,IAAI,EAAJA;AAFK,GAAP;AAID,CALM;AAMP,OAAO,IAAME,YAAY,GAAG,SAAfA,YAAe,GAAM;AAChC,SAAO;AACLD,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD,CAJM,C,CAMP;;AACA,IAAME,WAAW,GAAG,SAAdA,WAAc,GAAiC;AAAA,MAAhCC,KAAgC,uEAAxBZ,WAAwB;AAAA,MAAXa,MAAW;;AACnD,UAAQA,MAAM,CAACJ,IAAf;AACE,SAAKV,OAAL;AACEe,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,MAAvB;AACA,6CAAYD,KAAZ,GAAsBC,MAAM,CAACG,OAA7B;;AACF,SAAK,QAAL;AACE,6CACKJ,KADL;AAEEX,QAAAA,IAAI,kCAAOW,KAAK,CAACX,IAAb;AAAmBC,UAAAA,OAAO,EAAE,IAA5B;AAAkCD,UAAAA,IAAI,EAAEY,MAAM,CAACL;AAA/C;AAFN;;AAIF,SAAK,SAAL;AACE,6CACKI,KADL;AAEEX,QAAAA,IAAI,kCAAOW,KAAK,CAACX,IAAb;AAAmBC,UAAAA,OAAO,EAAE,KAA5B;AAAmCD,UAAAA,IAAI,EAAE;AAAzC;AAFN;;AAKF;AACE;AAhBJ;AAkBD,CAnBD;;AAqBA,eAAeU,WAAf","sourcesContent":["import { HYDRATE } from \"next-redux-wrapper\";\r\n\r\nconst initalState = {\r\n  user: {\r\n    loginFl: false,\r\n    user: null,\r\n    signUpDate: {},\r\n    loginData: {},\r\n  },\r\n  post: {\r\n    mainPosts: [],\r\n  },\r\n};\r\n\r\n// const changeNickname = {\r\n//   type: \"CHANGE_NICKNAME\",\r\n//   data: \"wooseop\",\r\n// };\r\n\r\n//같은 액션 데이터만 동적으로 바꾸는 함수 , action creator\r\n// const changeNickname = (data) => {\r\n//   return {\r\n//     type: \"CHANGE_NICKNAME\",\r\n//     data,\r\n//   };\r\n// };\r\n\r\nexport const loginAction = (data) => {\r\n  return {\r\n    type: \"LOG_IN\",\r\n    data,\r\n  };\r\n};\r\nexport const logoutAction = () => {\r\n  return {\r\n    type: \"LOG_OUT\",\r\n  };\r\n};\r\n\r\n//NOTE:(이전상태, 액션) => return 다음상태\r\nconst rootReducer = (state = initalState, action) => {\r\n  switch (action.type) {\r\n    case HYDRATE:\r\n      console.log(\"HYDRATE\", action);\r\n      return { ...state, ...action.payload };\r\n    case \"LOG_IN\":\r\n      return {\r\n        ...state,\r\n        user: { ...state.user, loginFl: true, user: action.data },\r\n      };\r\n    case \"LOG_OUT\":\r\n      return {\r\n        ...state,\r\n        user: { ...state.user, loginFl: false, user: null },\r\n      };\r\n\r\n    default:\r\n      break;\r\n  }\r\n};\r\n\r\nexport default rootReducer;\r\n"]},"metadata":{},"sourceType":"module"}