{"ast":null,"code":"import { createWrapper } from \"next-redux-wrapper\";\nimport { applyMiddleware, compose, createStore } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport reducer from \"../reducers/index\";\n\nconst configureStore = () => {\n  const middleware = [thunk];\n  const enhancer = false ? compose(applyMiddleware(...middleware)) : composeWithDevTools(applyMiddleware(...middleware));\n  const store = createStore(reducer, enhancer);\n  return store;\n};\n\nconst wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"sources":["E:/happy-sonday_react/node-sns/store/configureStore.js"],"names":["createWrapper","applyMiddleware","compose","createStore","composeWithDevTools","thunk","reducer","configureStore","middleware","enhancer","store","wrapper","debug"],"mappings":"AAAA,SAASA,aAAT,QAA8B,oBAA9B;AACA,SAASC,eAAT,EAA0BC,OAA1B,EAAmCC,WAAnC,QAAsD,OAAtD;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,OAAOC,OAAP,MAAoB,mBAApB;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAC3B,QAAMC,UAAU,GAAG,CAACH,KAAD,CAAnB;AACA,QAAMI,QAAQ,GACZ,QACIP,OAAO,CAACD,eAAe,CAAC,GAAGO,UAAJ,CAAhB,CADX,GAEIJ,mBAAmB,CAACH,eAAe,CAAC,GAAGO,UAAJ,CAAhB,CAHzB;AAIA,QAAME,KAAK,GAAGP,WAAW,CAACG,OAAD,EAAUG,QAAV,CAAzB;AAEA,SAAOC,KAAP;AACD,CATD;;AAWA,MAAMC,OAAO,GAAGX,aAAa,CAACO,cAAD,EAAiB;AAC5CK,EAAAA,KAAK;AADuC,CAAjB,CAA7B;AAIA,eAAeD,OAAf","sourcesContent":["import { createWrapper } from \"next-redux-wrapper\";\r\nimport { applyMiddleware, compose, createStore } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport reducer from \"../reducers/index\";\r\n\r\nconst configureStore = () => {\r\n  const middleware = [thunk];\r\n  const enhancer =\r\n    process.env.NODE_ENV === \"production\"\r\n      ? compose(applyMiddleware(...middleware))\r\n      : composeWithDevTools(applyMiddleware(...middleware));\r\n  const store = createStore(reducer, enhancer);\r\n\r\n  return store;\r\n};\r\n\r\nconst wrapper = createWrapper(configureStore, {\r\n  debug: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nexport default wrapper;\r\n"]},"metadata":{},"sourceType":"module"}