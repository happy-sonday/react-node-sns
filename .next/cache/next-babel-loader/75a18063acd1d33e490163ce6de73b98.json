{"ast":null,"code":"var _jsxFileName = \"E:\\\\happy-sonday_react\\\\node-sns\\\\components\\\\CommentForm.js\";\nimport { Button, Form, Input } from \"antd\";\nimport React, { useCallback } from \"react\";\nimport useInput from \"../hooks/useInput\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ADD_COMMENT_REQUEST } from \"../reducers/post\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst dispatch = useDispatch();\nuseEffect(() => {\n  if (addPostDone) {\n    setText(\"\");\n  }\n}, [addPostDone]);\nconst onSubmit = useCallback(() => {\n  dispatch(addPost(text)); //setText(\"\");\n}, [text]);\n\nconst CommentForm = ({\n  post\n}) => {\n  const [commentText, onChangeCommentText] = useInput(\"\");\n  const {\n    addCommentDone\n  } = useSelector(state => state.post);\n  const id = useSelector(state => {\n    var _state$user$self;\n\n    console.log(state.user);\n    return (_state$user$self = state.user.self) === null || _state$user$self === void 0 ? void 0 : _state$user$self.id;\n  });\n  const onSubmitComment = useCallback(() => {\n    console.log(post.id, commentText);\n    dispatch({\n      type: ADD_COMMENT_REQUEST,\n      data: {\n        content: commentText,\n        postId: post.id,\n        userId: id\n      }\n    });\n  }, [commentText]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onFinish: onSubmitComment,\n    children: /*#__PURE__*/_jsxDEV(Form.Item, {\n      style: {\n        position: \"relative\",\n        margin: 0\n      },\n      children: [/*#__PURE__*/_jsxDEV(Input.TextArea, {\n        value: commentText,\n        onChange: onChangeCommentText,\n        rows: 4\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        style: {\n          position: \"absolute\",\n          right: 0,\n          bottom: -40,\n          zIndex: 1\n        },\n        children: \"\\uB4F1\\uB85D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\nCommentForm.propTypes = {\n  post: PropTypes.object.isRequired\n};\nexport default CommentForm;","map":{"version":3,"sources":["E:/happy-sonday_react/node-sns/components/CommentForm.js"],"names":["Button","Form","Input","React","useCallback","useInput","PropTypes","useDispatch","useSelector","ADD_COMMENT_REQUEST","dispatch","useEffect","addPostDone","setText","onSubmit","addPost","text","CommentForm","post","commentText","onChangeCommentText","addCommentDone","state","id","console","log","user","self","onSubmitComment","type","data","content","postId","userId","position","margin","right","bottom","zIndex","propTypes","object","isRequired"],"mappings":";AAAA,SAASA,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,QAAoC,MAApC;AACA,OAAOC,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,mBAAT,QAAoC,kBAApC;;AAEA,MAAMC,QAAQ,GAAGH,WAAW,EAA5B;AAEAI,SAAS,CAAC,MAAM;AACd,MAAIC,WAAJ,EAAiB;AACfC,IAAAA,OAAO,CAAC,EAAD,CAAP;AACD;AACF,CAJQ,EAIN,CAACD,WAAD,CAJM,CAAT;AAMA,MAAME,QAAQ,GAAGV,WAAW,CAAC,MAAM;AACjCM,EAAAA,QAAQ,CAACK,OAAO,CAACC,IAAD,CAAR,CAAR,CADiC,CAEjC;AACD,CAH2B,EAGzB,CAACA,IAAD,CAHyB,CAA5B;;AAKA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAChC,QAAM,CAACC,WAAD,EAAcC,mBAAd,IAAqCf,QAAQ,CAAC,EAAD,CAAnD;AACA,QAAM;AAAEgB,IAAAA;AAAF,MAAqBb,WAAW,CAAEc,KAAD,IAAWA,KAAK,CAACJ,IAAlB,CAAtC;AACA,QAAMK,EAAE,GAAGf,WAAW,CAAEc,KAAD,IAAW;AAAA;;AAChCE,IAAAA,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACI,IAAlB;AACA,+BAAOJ,KAAK,CAACI,IAAN,CAAWC,IAAlB,qDAAO,iBAAiBJ,EAAxB;AACD,GAHqB,CAAtB;AAIA,QAAMK,eAAe,GAAGxB,WAAW,CAAC,MAAM;AACxCoB,IAAAA,OAAO,CAACC,GAAR,CAAYP,IAAI,CAACK,EAAjB,EAAqBJ,WAArB;AACAT,IAAAA,QAAQ,CAAC;AACPmB,MAAAA,IAAI,EAAEpB,mBADC;AAEPqB,MAAAA,IAAI,EAAE;AAAEC,QAAAA,OAAO,EAAEZ,WAAX;AAAwBa,QAAAA,MAAM,EAAEd,IAAI,CAACK,EAArC;AAAyCU,QAAAA,MAAM,EAAEV;AAAjD;AAFC,KAAD,CAAR;AAID,GANkC,EAMhC,CAACJ,WAAD,CANgC,CAAnC;AAQA,sBACE,QAAC,IAAD;AAAM,IAAA,QAAQ,EAAES,eAAhB;AAAA,2BACE,QAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAE;AAAEM,QAAAA,QAAQ,EAAE,UAAZ;AAAwBC,QAAAA,MAAM,EAAE;AAAhC,OAAlB;AAAA,8BACE,QAAC,KAAD,CAAO,QAAP;AACE,QAAA,KAAK,EAAEhB,WADT;AAEE,QAAA,QAAQ,EAAEC,mBAFZ;AAGE,QAAA,IAAI,EAAE;AAHR;AAAA;AAAA;AAAA;AAAA,cADF,eAME,QAAC,MAAD;AACE,QAAA,IAAI,EAAC,SADP;AAEE,QAAA,QAAQ,EAAC,QAFX;AAGE,QAAA,KAAK,EAAE;AAAEc,UAAAA,QAAQ,EAAE,UAAZ;AAAwBE,UAAAA,KAAK,EAAE,CAA/B;AAAkCC,UAAAA,MAAM,EAAE,CAAC,EAA3C;AAA+CC,UAAAA,MAAM,EAAE;AAAvD,SAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CAjCD;;AAmCArB,WAAW,CAACsB,SAAZ,GAAwB;AACtBrB,EAAAA,IAAI,EAAEZ,SAAS,CAACkC,MAAV,CAAiBC;AADD,CAAxB;AAIA,eAAexB,WAAf","sourcesContent":["import { Button, Form, Input } from \"antd\";\r\nimport React, { useCallback } from \"react\";\r\nimport useInput from \"../hooks/useInput\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { ADD_COMMENT_REQUEST } from \"../reducers/post\";\r\n\r\nconst dispatch = useDispatch();\r\n\r\nuseEffect(() => {\r\n  if (addPostDone) {\r\n    setText(\"\");\r\n  }\r\n}, [addPostDone]);\r\n\r\nconst onSubmit = useCallback(() => {\r\n  dispatch(addPost(text));\r\n  //setText(\"\");\r\n}, [text]);\r\n\r\nconst CommentForm = ({ post }) => {\r\n  const [commentText, onChangeCommentText] = useInput(\"\");\r\n  const { addCommentDone } = useSelector((state) => state.post);\r\n  const id = useSelector((state) => {\r\n    console.log(state.user);\r\n    return state.user.self?.id;\r\n  });\r\n  const onSubmitComment = useCallback(() => {\r\n    console.log(post.id, commentText);\r\n    dispatch({\r\n      type: ADD_COMMENT_REQUEST,\r\n      data: { content: commentText, postId: post.id, userId: id },\r\n    });\r\n  }, [commentText]);\r\n\r\n  return (\r\n    <Form onFinish={onSubmitComment}>\r\n      <Form.Item style={{ position: \"relative\", margin: 0 }}>\r\n        <Input.TextArea\r\n          value={commentText}\r\n          onChange={onChangeCommentText}\r\n          rows={4}\r\n        />\r\n        <Button\r\n          type=\"primary\"\r\n          htmlType=\"submit\"\r\n          style={{ position: \"absolute\", right: 0, bottom: -40, zIndex: 1 }}\r\n        >\r\n          등록\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nCommentForm.propTypes = {\r\n  post: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default CommentForm;\r\n"]},"metadata":{},"sourceType":"module"}