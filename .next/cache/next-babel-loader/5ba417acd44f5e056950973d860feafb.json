{"ast":null,"code":"var _jsxFileName = \"E:\\\\happy-sonday_react\\\\node-sns\\\\pages\\\\index.js\";\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport AppLayout from \"../components/AppLayout\";\nimport PostCard from \"../components/PostCard\";\nimport PostFrom from \"../components/PostForm\";\nimport { LOAD_POSTS_REQUEST } from \"../reducers/post\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  const {\n    self\n  } = useSelector(state => state.user);\n  const {\n    mainPosts\n  } = useSelector(state => state.post);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch({\n      type: LOAD_POSTS_REQUEST\n    });\n  }, []);\n  useEffect(() => {\n    function onScroll() {\n      console.log(window.scrollY, //현재 스크롤의 위치값\n      document.documentElement.clientHeight, //화면의 높이\n      document.documentElement.scrollHeight //scrollHeight는 현재 스크롤을 내릴수 있는 노이\n      );\n    }\n\n    window.addEventListener(\"scroll\", onScroll);\n    return () => {\n      window.removeEventListener(\"scroll\", onScroll);\n    };\n    dispatch({\n      type: LOAD_POSTS_REQUEST\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(AppLayout, {\n      children: [self && /*#__PURE__*/_jsxDEV(PostFrom, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 18\n      }, this), mainPosts.map(post => /*#__PURE__*/_jsxDEV(PostCard, {\n        post: post\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\nexport default Home;","map":{"version":3,"sources":["E:/happy-sonday_react/node-sns/pages/index.js"],"names":["React","useEffect","useDispatch","useSelector","AppLayout","PostCard","PostFrom","LOAD_POSTS_REQUEST","Home","self","state","user","mainPosts","post","dispatch","type","onScroll","console","log","window","scrollY","document","documentElement","clientHeight","scrollHeight","addEventListener","removeEventListener","map","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,kBAAT,QAAmC,kBAAnC;;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACjB,QAAM;AAAEC,IAAAA;AAAF,MAAWN,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAA5B;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAgBT,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACG,IAAlB,CAAjC;AAEA,QAAMC,QAAQ,GAAGZ,WAAW,EAA5B;AACAD,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAER;AADC,KAAD,CAAR;AAGD,GAJQ,EAIN,EAJM,CAAT;AAMAN,EAAAA,SAAS,CAAC,MAAM;AACd,aAASe,QAAT,GAAoB;AAClBC,MAAAA,OAAO,CAACC,GAAR,CACEC,MAAM,CAACC,OADT,EACkB;AAChBC,MAAAA,QAAQ,CAACC,eAAT,CAAyBC,YAF3B,EAEyC;AACvCF,MAAAA,QAAQ,CAACC,eAAT,CAAyBE,YAH3B,CAGwC;AAHxC;AAKD;;AACDL,IAAAA,MAAM,CAACM,gBAAP,CAAwB,QAAxB,EAAkCT,QAAlC;AAEA,WAAO,MAAM;AACXG,MAAAA,MAAM,CAACO,mBAAP,CAA2B,QAA3B,EAAqCV,QAArC;AACD,KAFD;AAGAF,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAER;AADC,KAAD,CAAR;AAGD,GAhBQ,EAgBN,EAhBM,CAAT;AAkBA,sBACE;AAAA,2BACE,QAAC,SAAD;AAAA,iBACGE,IAAI,iBAAI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cADX,EAEGG,SAAS,CAACe,GAAV,CAAed,IAAD,iBACb,QAAC,QAAD;AAAwB,QAAA,IAAI,EAAEA;AAA9B,SAAeA,IAAI,CAACe,EAApB;AAAA;AAAA;AAAA;AAAA,cADD,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAUD,CAvCD;;AAyCA,eAAepB,IAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport AppLayout from \"../components/AppLayout\";\r\nimport PostCard from \"../components/PostCard\";\r\nimport PostFrom from \"../components/PostForm\";\r\nimport { LOAD_POSTS_REQUEST } from \"../reducers/post\";\r\n\r\nconst Home = () => {\r\n  const { self } = useSelector((state) => state.user);\r\n  const { mainPosts } = useSelector((state) => state.post);\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch({\r\n      type: LOAD_POSTS_REQUEST,\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    function onScroll() {\r\n      console.log(\r\n        window.scrollY, //현재 스크롤의 위치값\r\n        document.documentElement.clientHeight, //화면의 높이\r\n        document.documentElement.scrollHeight //scrollHeight는 현재 스크롤을 내릴수 있는 노이\r\n      );\r\n    }\r\n    window.addEventListener(\"scroll\", onScroll);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", onScroll);\r\n    };\r\n    dispatch({\r\n      type: LOAD_POSTS_REQUEST,\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <AppLayout>\r\n        {self && <PostFrom />}\r\n        {mainPosts.map((post) => (\r\n          <PostCard key={post.id} post={post} />\r\n        ))}\r\n      </AppLayout>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}