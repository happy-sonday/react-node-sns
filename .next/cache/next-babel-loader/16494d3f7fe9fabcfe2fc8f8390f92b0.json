{"ast":null,"code":"var _jsxFileName = \"E:\\\\happy-sonday_react\\\\node-sns\\\\components\\\\CommentForm.js\";\nimport { Button, Form, Input } from \"antd\";\nimport React, { useCallback, useEffect } from \"react\";\nimport useInput from \"../hooks/useInput\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ADD_COMMENT_REQUEST } from \"../reducers/post\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CommentForm = ({\n  post\n}) => {\n  const [commentText, onChangeCommentText, setCommentText] = useInput(\"\");\n  const dispatch = useDispatch();\n  const {\n    addCommentDone\n  } = useSelector(state => state.post);\n  const id = useSelector(state => {\n    var _state$user$self;\n\n    console.log(state.user);\n    return (_state$user$self = state.user.self) === null || _state$user$self === void 0 ? void 0 : _state$user$self.id;\n  });\n  useEffect(() => {\n    if (addCommentDone) {\n      setCommentText(\"\");\n    }\n  }, [addCommentDone]);\n  const onSubmitComment = useCallback(() => {\n    console.log(post.id, commentText);\n    dispatch({\n      type: ADD_COMMENT_REQUEST,\n      data: {\n        content: commentText,\n        postId: post.id,\n        userId: id\n      }\n    });\n  }, [commentText]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onFinish: onSubmitComment,\n    children: /*#__PURE__*/_jsxDEV(Form.Item, {\n      style: {\n        position: \"relative\",\n        margin: 0\n      },\n      children: [/*#__PURE__*/_jsxDEV(Input.TextArea, {\n        value: commentText,\n        onChange: onChangeCommentText,\n        rows: 4\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        style: {\n          position: \"absolute\",\n          right: 0,\n          bottom: -40,\n          zIndex: 1\n        },\n        children: \"\\uB4F1\\uB85D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\nCommentForm.propTypes = {\n  post: PropTypes.object.isRequired\n};\nexport default CommentForm;","map":{"version":3,"sources":["E:/happy-sonday_react/node-sns/components/CommentForm.js"],"names":["Button","Form","Input","React","useCallback","useEffect","useInput","PropTypes","useDispatch","useSelector","ADD_COMMENT_REQUEST","CommentForm","post","commentText","onChangeCommentText","setCommentText","dispatch","addCommentDone","state","id","console","log","user","self","onSubmitComment","type","data","content","postId","userId","position","margin","right","bottom","zIndex","propTypes","object","isRequired"],"mappings":";AAAA,SAASA,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,QAAoC,MAApC;AACA,OAAOC,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,QAA8C,OAA9C;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,mBAAT,QAAoC,kBAApC;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAChC,QAAM,CAACC,WAAD,EAAcC,mBAAd,EAAmCC,cAAnC,IAAqDT,QAAQ,CAAC,EAAD,CAAnE;AACA,QAAMU,QAAQ,GAAGR,WAAW,EAA5B;AACA,QAAM;AAAES,IAAAA;AAAF,MAAqBR,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACN,IAAlB,CAAtC;AACA,QAAMO,EAAE,GAAGV,WAAW,CAAES,KAAD,IAAW;AAAA;;AAChCE,IAAAA,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACI,IAAlB;AACA,+BAAOJ,KAAK,CAACI,IAAN,CAAWC,IAAlB,qDAAO,iBAAiBJ,EAAxB;AACD,GAHqB,CAAtB;AAKAd,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIY,cAAJ,EAAoB;AAClBF,MAAAA,cAAc,CAAC,EAAD,CAAd;AACD;AACF,GAJQ,EAIN,CAACE,cAAD,CAJM,CAAT;AAMA,QAAMO,eAAe,GAAGpB,WAAW,CAAC,MAAM;AACxCgB,IAAAA,OAAO,CAACC,GAAR,CAAYT,IAAI,CAACO,EAAjB,EAAqBN,WAArB;AACAG,IAAAA,QAAQ,CAAC;AACPS,MAAAA,IAAI,EAAEf,mBADC;AAEPgB,MAAAA,IAAI,EAAE;AAAEC,QAAAA,OAAO,EAAEd,WAAX;AAAwBe,QAAAA,MAAM,EAAEhB,IAAI,CAACO,EAArC;AAAyCU,QAAAA,MAAM,EAAEV;AAAjD;AAFC,KAAD,CAAR;AAID,GANkC,EAMhC,CAACN,WAAD,CANgC,CAAnC;AAQA,sBACE,QAAC,IAAD;AAAM,IAAA,QAAQ,EAAEW,eAAhB;AAAA,2BACE,QAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAE;AAAEM,QAAAA,QAAQ,EAAE,UAAZ;AAAwBC,QAAAA,MAAM,EAAE;AAAhC,OAAlB;AAAA,8BACE,QAAC,KAAD,CAAO,QAAP;AACE,QAAA,KAAK,EAAElB,WADT;AAEE,QAAA,QAAQ,EAAEC,mBAFZ;AAGE,QAAA,IAAI,EAAE;AAHR;AAAA;AAAA;AAAA;AAAA,cADF,eAME,QAAC,MAAD;AACE,QAAA,IAAI,EAAC,SADP;AAEE,QAAA,QAAQ,EAAC,QAFX;AAGE,QAAA,KAAK,EAAE;AAAEgB,UAAAA,QAAQ,EAAE,UAAZ;AAAwBE,UAAAA,KAAK,EAAE,CAA/B;AAAkCC,UAAAA,MAAM,EAAE,CAAC,EAA3C;AAA+CC,UAAAA,MAAM,EAAE;AAAvD,SAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CAzCD;;AA2CAvB,WAAW,CAACwB,SAAZ,GAAwB;AACtBvB,EAAAA,IAAI,EAAEL,SAAS,CAAC6B,MAAV,CAAiBC;AADD,CAAxB;AAIA,eAAe1B,WAAf","sourcesContent":["import { Button, Form, Input } from \"antd\";\r\nimport React, { useCallback, useEffect } from \"react\";\r\nimport useInput from \"../hooks/useInput\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { ADD_COMMENT_REQUEST } from \"../reducers/post\";\r\n\r\nconst CommentForm = ({ post }) => {\r\n  const [commentText, onChangeCommentText, setCommentText] = useInput(\"\");\r\n  const dispatch = useDispatch();\r\n  const { addCommentDone } = useSelector((state) => state.post);\r\n  const id = useSelector((state) => {\r\n    console.log(state.user);\r\n    return state.user.self?.id;\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (addCommentDone) {\r\n      setCommentText(\"\");\r\n    }\r\n  }, [addCommentDone]);\r\n\r\n  const onSubmitComment = useCallback(() => {\r\n    console.log(post.id, commentText);\r\n    dispatch({\r\n      type: ADD_COMMENT_REQUEST,\r\n      data: { content: commentText, postId: post.id, userId: id },\r\n    });\r\n  }, [commentText]);\r\n\r\n  return (\r\n    <Form onFinish={onSubmitComment}>\r\n      <Form.Item style={{ position: \"relative\", margin: 0 }}>\r\n        <Input.TextArea\r\n          value={commentText}\r\n          onChange={onChangeCommentText}\r\n          rows={4}\r\n        />\r\n        <Button\r\n          type=\"primary\"\r\n          htmlType=\"submit\"\r\n          style={{ position: \"absolute\", right: 0, bottom: -40, zIndex: 1 }}\r\n        >\r\n          등록\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nCommentForm.propTypes = {\r\n  post: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default CommentForm;\r\n"]},"metadata":{},"sourceType":"module"}