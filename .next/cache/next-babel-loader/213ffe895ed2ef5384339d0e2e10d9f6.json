{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { HYDRATE } from \"next-redux-wrapper\";\nimport user from \"../reducers/user\";\nimport post from \"../reducers/post\";\nimport { combineReducers } from \"redux\";\nvar initalState = {\n  user: {},\n  post: {}\n}; // const changeNickname = {\n//   type: \"CHANGE_NICKNAME\",\n//   data: \"wooseop\",\n// };\n//같은 액션 데이터만 동적으로 바꾸는 함수 , action creator\n// const changeNickname = (data) => {\n//   return {\n//     type: \"CHANGE_NICKNAME\",\n//     data,\n//   };\n// };\n//NOTE:(이전상태, 액션) => return 다음상태\n\nvar rootReducer = combineReducers({\n  //SSR 및 HYDRATE를 위해서 추가\n  index: function index() {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var action = arguments.length > 1 ? arguments[1] : undefined;\n\n    switch (action.type) {\n      case HYDRATE:\n        console.log(\"HYDRATE\", action);\n        return _objectSpread(_objectSpread({}, state), action.payload);\n\n      default:\n        return state;\n    }\n  },\n  user: user,\n  post: post\n});\nexport default rootReducer;","map":{"version":3,"sources":["E:/happy-sonday_react/node-sns/reducers/index.js"],"names":["HYDRATE","user","post","combineReducers","initalState","rootReducer","index","state","action","type","console","log","payload"],"mappings":";;;;;;AAAA,SAASA,OAAT,QAAwB,oBAAxB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,SAASC,eAAT,QAAgC,OAAhC;AACA,IAAMC,WAAW,GAAG;AAClBH,EAAAA,IAAI,EAAE,EADY;AAElBC,EAAAA,IAAI,EAAE;AAFY,CAApB,C,CAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA,IAAMG,WAAW,GAAGF,eAAe,CAAC;AAClC;AACAG,EAAAA,KAAK,EAAE,iBAAwB;AAAA,QAAvBC,KAAuB,uEAAf,EAAe;AAAA,QAAXC,MAAW;;AAC7B,YAAQA,MAAM,CAACC,IAAf;AACE,WAAKT,OAAL;AACEU,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBH,MAAvB;AACA,+CAAYD,KAAZ,GAAsBC,MAAM,CAACI,OAA7B;;AAEF;AACE,eAAOL,KAAP;AANJ;AAQD,GAXiC;AAYlCN,EAAAA,IAAI,EAAJA,IAZkC;AAalCC,EAAAA,IAAI,EAAJA;AAbkC,CAAD,CAAnC;AAgBA,eAAeG,WAAf","sourcesContent":["import { HYDRATE } from \"next-redux-wrapper\";\r\nimport user from \"../reducers/user\";\r\nimport post from \"../reducers/post\";\r\nimport { combineReducers } from \"redux\";\r\nconst initalState = {\r\n  user: {},\r\n  post: {},\r\n};\r\n\r\n// const changeNickname = {\r\n//   type: \"CHANGE_NICKNAME\",\r\n//   data: \"wooseop\",\r\n// };\r\n\r\n//같은 액션 데이터만 동적으로 바꾸는 함수 , action creator\r\n// const changeNickname = (data) => {\r\n//   return {\r\n//     type: \"CHANGE_NICKNAME\",\r\n//     data,\r\n//   };\r\n// };\r\n\r\n//NOTE:(이전상태, 액션) => return 다음상태\r\nconst rootReducer = combineReducers({\r\n  //SSR 및 HYDRATE를 위해서 추가\r\n  index: (state = {}, action) => {\r\n    switch (action.type) {\r\n      case HYDRATE:\r\n        console.log(\"HYDRATE\", action);\r\n        return { ...state, ...action.payload };\r\n\r\n      default:\r\n        return state;\r\n    }\r\n  },\r\n  user,\r\n  post,\r\n});\r\n\r\nexport default rootReducer;\r\n"]},"metadata":{},"sourceType":"module"}