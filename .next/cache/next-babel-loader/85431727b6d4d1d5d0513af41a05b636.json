{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar initalState = {\n  name: \"sonday\",\n  age: 27,\n  password: \"happiness\"\n}; // const changeNickname = {\n//   type: \"CHANGE_NICKNAME\",\n//   data: \"wooseop\",\n// };\n//같은 액션 데이터만 동적으로 바꾸는 함수 , action creator\n\nvar changeNickname = function changeNickname(data) {\n  return {\n    type: \"CHANGE_NICKNAME\",\n    data: data\n  };\n}; //NOTE:(이전상태, 액션) => return 다음상태\n\n\nvar rootReducer = function rootReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initalState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"CHANGE_NICKNAME\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        name: action.data\n      });\n\n    default:\n      break;\n  }\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["E:/happy-sonday_react/node-sns/reducers/index.js"],"names":["initalState","name","age","password","changeNickname","data","type","rootReducer","state","action"],"mappings":";;;;;;AAAA,IAAMA,WAAW,GAAG;AAClBC,EAAAA,IAAI,EAAE,QADY;AAElBC,EAAAA,GAAG,EAAE,EAFa;AAGlBC,EAAAA,QAAQ,EAAE;AAHQ,CAApB,C,CAMA;AACA;AACA;AACA;AAEA;;AACA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,IAAD,EAAU;AAC/B,SAAO;AACLC,IAAAA,IAAI,EAAE,iBADD;AAELD,IAAAA,IAAI,EAAJA;AAFK,GAAP;AAID,CALD,C,CAOA;;;AACA,IAAME,WAAW,GAAG,SAAdA,WAAc,GAAiC;AAAA,MAAhCC,KAAgC,uEAAxBR,WAAwB;AAAA,MAAXS,MAAW;;AACnD,UAAQA,MAAM,CAACH,IAAf;AACE,SAAK,iBAAL;AACE,6CACKE,KADL;AAEEP,QAAAA,IAAI,EAAEQ,MAAM,CAACJ;AAFf;;AAKF;AACE;AARJ;AAUD,CAXD;;AAaA,eAAeE,WAAf","sourcesContent":["const initalState = {\r\n  name: \"sonday\",\r\n  age: 27,\r\n  password: \"happiness\",\r\n};\r\n\r\n// const changeNickname = {\r\n//   type: \"CHANGE_NICKNAME\",\r\n//   data: \"wooseop\",\r\n// };\r\n\r\n//같은 액션 데이터만 동적으로 바꾸는 함수 , action creator\r\nconst changeNickname = (data) => {\r\n  return {\r\n    type: \"CHANGE_NICKNAME\",\r\n    data,\r\n  };\r\n};\r\n\r\n//NOTE:(이전상태, 액션) => return 다음상태\r\nconst rootReducer = (state = initalState, action) => {\r\n  switch (action.type) {\r\n    case \"CHANGE_NICKNAME\":\r\n      return {\r\n        ...state,\r\n        name: action.data,\r\n      };\r\n\r\n    default:\r\n      break;\r\n  }\r\n};\r\n\r\nexport default rootReducer;\r\n"]},"metadata":{},"sourceType":"module"}