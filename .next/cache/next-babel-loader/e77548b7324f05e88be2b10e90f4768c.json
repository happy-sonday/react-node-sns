{"ast":null,"code":"import axios from \"axios\";\nimport { all, delay, fork, put, takeLatest, call } from \"redux-saga/effects\";\nimport { FOLLOW_FAILURE, FOLLOW_REQUEST, FOLLOW_SUCCESS, LOG_IN_FAILURE, LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_OUT_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, SIGN_UP_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, UNFOLLOW_FAILURE, UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS } from \"../reducers/user\";\n\nfunction logInAPI(data) {\n  return axios.post(\"/user/login\", data);\n}\n\nfunction* logIn(action) {\n  try {\n    const result = yield call(logInAPI, action.data);\n    console.log(result);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: result.data\n    });\n  } catch (error) {\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: error.response.data\n    });\n  }\n}\n\nfunction logOutAPI(data) {\n  return axios.post(\"/user/logout\", data);\n}\n\nfunction* logOut(action) {\n  try {\n    yield delay(1000);\n    const result = yield call(logOutAPI, action.data);\n    yield put({\n      type: LOG_OUT_SUCCESS\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction signUpAPI(data) {\n  console.log(\"회원가입 서버요청\");\n  return axios.post(\"/user\", data);\n}\n\nfunction* signUp(action) {\n  try {\n    //yield delay(1000);\n    const result = yield call(signUpAPI, action.data);\n    console.log(\"요청결과:\", result);\n    yield put({\n      type: SIGN_UP_SUCCESS\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction followAPI() {\n  return axios.post(\"/api/follow\");\n}\n\nfunction* follow(action) {\n  try {\n    yield delay(1000); // const result = yield call(logOutAPI);\n\n    yield put({\n      type: FOLLOW_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: FOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction unfollowAPI() {\n  return axios.post(\"/api/unfollow\");\n}\n\nfunction* unfollow(action) {\n  try {\n    yield delay(1000); // const result = yield call(logOutAPI);\n\n    yield put({\n      type: UNFOLLOW_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: UNFOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchLogIn() {\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n}\n\nfunction* watchFollow() {\n  yield takeLatest(FOLLOW_REQUEST, follow);\n}\n\nfunction* watchUnfollow() {\n  yield takeLatest(UNFOLLOW_REQUEST, unfollow);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogIn), fork(watchLogOut), fork(watchSignUp), fork(watchFollow), fork(watchUnfollow)]);\n}","map":{"version":3,"sources":["E:/happy-sonday_react/node-sns/sagas/user.js"],"names":["axios","all","delay","fork","put","takeLatest","call","FOLLOW_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","LOG_IN_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_OUT_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","SIGN_UP_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","UNFOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","logInAPI","data","post","logIn","action","result","console","log","type","error","response","logOutAPI","logOut","err","signUpAPI","signUp","followAPI","follow","unfollowAPI","unfollow","watchLogIn","watchFollow","watchUnfollow","watchLogOut","watchSignUp","userSaga"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport { all, delay, fork, put, takeLatest, call } from \"redux-saga/effects\";\r\nimport {\r\n  FOLLOW_FAILURE,\r\n  FOLLOW_REQUEST,\r\n  FOLLOW_SUCCESS,\r\n  LOG_IN_FAILURE,\r\n  LOG_IN_REQUEST,\r\n  LOG_IN_SUCCESS,\r\n  LOG_OUT_FAILURE,\r\n  LOG_OUT_REQUEST,\r\n  LOG_OUT_SUCCESS,\r\n  SIGN_UP_FAILURE,\r\n  SIGN_UP_REQUEST,\r\n  SIGN_UP_SUCCESS,\r\n  UNFOLLOW_FAILURE,\r\n  UNFOLLOW_REQUEST,\r\n  UNFOLLOW_SUCCESS,\r\n} from \"../reducers/user\";\r\n\r\nfunction logInAPI(data) {\r\n  return axios.post(\"/user/login\", data);\r\n}\r\n\r\nfunction* logIn(action) {\r\n  try {\r\n    const result = yield call(logInAPI, action.data);\r\n    console.log(result);\r\n    yield put({\r\n      type: LOG_IN_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (error) {\r\n    yield put({\r\n      type: LOG_IN_FAILURE,\r\n      error: error.response.data,\r\n    });\r\n  }\r\n}\r\nfunction logOutAPI(data) {\r\n  return axios.post(\"/user/logout\", data);\r\n}\r\n\r\nfunction* logOut(action) {\r\n  try {\r\n    yield delay(1000);\r\n    const result = yield call(logOutAPI, action.data);\r\n    yield put({\r\n      type: LOG_OUT_SUCCESS,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: LOG_OUT_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction signUpAPI(data) {\r\n  console.log(\"회원가입 서버요청\");\r\n  return axios.post(\"/user\", data);\r\n}\r\nfunction* signUp(action) {\r\n  try {\r\n    //yield delay(1000);\r\n    const result = yield call(signUpAPI, action.data);\r\n\r\n    console.log(\"요청결과:\", result);\r\n    yield put({\r\n      type: SIGN_UP_SUCCESS,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: SIGN_UP_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\nfunction followAPI() {\r\n  return axios.post(\"/api/follow\");\r\n}\r\nfunction* follow(action) {\r\n  try {\r\n    yield delay(1000);\r\n    // const result = yield call(logOutAPI);\r\n    yield put({\r\n      type: FOLLOW_SUCCESS,\r\n      data: action.data,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: FOLLOW_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\nfunction unfollowAPI() {\r\n  return axios.post(\"/api/unfollow\");\r\n}\r\nfunction* unfollow(action) {\r\n  try {\r\n    yield delay(1000);\r\n    // const result = yield call(logOutAPI);\r\n    yield put({\r\n      type: UNFOLLOW_SUCCESS,\r\n      data: action.data,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: UNFOLLOW_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchLogIn() {\r\n  yield takeLatest(LOG_IN_REQUEST, logIn);\r\n}\r\nfunction* watchFollow() {\r\n  yield takeLatest(FOLLOW_REQUEST, follow);\r\n}\r\nfunction* watchUnfollow() {\r\n  yield takeLatest(UNFOLLOW_REQUEST, unfollow);\r\n}\r\nfunction* watchLogOut() {\r\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\r\n}\r\nfunction* watchSignUp() {\r\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\r\n}\r\n\r\nexport default function* userSaga() {\r\n  yield all([\r\n    fork(watchLogIn),\r\n    fork(watchLogOut),\r\n    fork(watchSignUp),\r\n    fork(watchFollow),\r\n    fork(watchUnfollow),\r\n  ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}