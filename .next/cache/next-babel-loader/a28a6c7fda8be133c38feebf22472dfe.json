{"ast":null,"code":"import axios from \"axios\";\nimport { all, delay, fork, put, takeLatest } from \"redux-saga/effects\";\n\nfunction logInAPI() {\n  return axios.post(\"/api/login\");\n}\n\nfunction* logIn(action) {\n  try {\n    console.log(\"saga LOG_IN_REQUEST ACTION\");\n    yield delay(1000); //const result = yield call(logInAPI);\n\n    yield put({\n      type: \"LOG_IN_SUCCESS\",\n      data: action.data\n    });\n  } catch (error) {\n    yield put({\n      type: \"LOG_IN_FAILURE\",\n      data: error.response.data\n    });\n  }\n}\n\nfunction* logOut() {\n  try {\n    yield delay(1000); // const result = yield call(logOutAPI);\n\n    yield put({\n      type: \"LOG_OUT_SUCCESS\"\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: \"LOG_OUT_FAILURE\",\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchLogIn() {\n  yield takeLatest(\"LOG_IN_REQUEST\", logIn);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(\"LOG_OUT_REQUEST\", logOut);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogIn), fork(watchLogOut)]);\n}","map":{"version":3,"sources":["E:/happy-sonday_react/node-sns/sagas/user.js"],"names":["axios","all","delay","fork","put","takeLatest","logInAPI","post","logIn","action","console","log","type","data","error","response","logOut","err","watchLogIn","watchLogOut","userSaga"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,KAAd,EAAqBC,IAArB,EAA2BC,GAA3B,EAAgCC,UAAhC,QAAkD,oBAAlD;;AAEA,SAASC,QAAT,GAAoB;AAClB,SAAON,KAAK,CAACO,IAAN,CAAW,YAAX,CAAP;AACD;;AACD,UAAUC,KAAV,CAAgBC,MAAhB,EAAwB;AACtB,MAAI;AACFC,IAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACA,UAAMT,KAAK,CAAC,IAAD,CAAX,CAFE,CAGF;;AACA,UAAME,GAAG,CAAC;AACRQ,MAAAA,IAAI,EAAE,gBADE;AAERC,MAAAA,IAAI,EAAEJ,MAAM,CAACI;AAFL,KAAD,CAAT;AAID,GARD,CAQE,OAAOC,KAAP,EAAc;AACd,UAAMV,GAAG,CAAC;AACRQ,MAAAA,IAAI,EAAE,gBADE;AAERC,MAAAA,IAAI,EAAEC,KAAK,CAACC,QAAN,CAAeF;AAFb,KAAD,CAAT;AAID;AACF;;AAED,UAAUG,MAAV,GAAmB;AACjB,MAAI;AACF,UAAMd,KAAK,CAAC,IAAD,CAAX,CADE,CAEF;;AACA,UAAME,GAAG,CAAC;AACRQ,MAAAA,IAAI,EAAE;AADE,KAAD,CAAT;AAGD,GAND,CAME,OAAOK,GAAP,EAAY;AACZP,IAAAA,OAAO,CAACI,KAAR,CAAcG,GAAd;AACA,UAAMb,GAAG,CAAC;AACRQ,MAAAA,IAAI,EAAE,iBADE;AAERE,MAAAA,KAAK,EAAEG,GAAG,CAACF,QAAJ,CAAaF;AAFZ,KAAD,CAAT;AAID;AACF;;AAED,UAAUK,UAAV,GAAuB;AACrB,QAAMb,UAAU,CAAC,gBAAD,EAAmBG,KAAnB,CAAhB;AACD;;AACD,UAAUW,WAAV,GAAwB;AACtB,QAAMd,UAAU,CAAC,iBAAD,EAAoBW,MAApB,CAAhB;AACD;;AAED,eAAe,UAAUI,QAAV,GAAqB;AAClC,QAAMnB,GAAG,CAAC,CAACE,IAAI,CAACe,UAAD,CAAL,EAAmBf,IAAI,CAACgB,WAAD,CAAvB,CAAD,CAAT;AACD","sourcesContent":["import axios from \"axios\";\r\nimport { all, delay, fork, put, takeLatest } from \"redux-saga/effects\";\r\n\r\nfunction logInAPI() {\r\n  return axios.post(\"/api/login\");\r\n}\r\nfunction* logIn(action) {\r\n  try {\r\n    console.log(\"saga LOG_IN_REQUEST ACTION\");\r\n    yield delay(1000);\r\n    //const result = yield call(logInAPI);\r\n    yield put({\r\n      type: \"LOG_IN_SUCCESS\",\r\n      data: action.data,\r\n    });\r\n  } catch (error) {\r\n    yield put({\r\n      type: \"LOG_IN_FAILURE\",\r\n      data: error.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* logOut() {\r\n  try {\r\n    yield delay(1000);\r\n    // const result = yield call(logOutAPI);\r\n    yield put({\r\n      type: \"LOG_OUT_SUCCESS\",\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: \"LOG_OUT_FAILURE\",\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchLogIn() {\r\n  yield takeLatest(\"LOG_IN_REQUEST\", logIn);\r\n}\r\nfunction* watchLogOut() {\r\n  yield takeLatest(\"LOG_OUT_REQUEST\", logOut);\r\n}\r\n\r\nexport default function* userSaga() {\r\n  yield all([fork(watchLogIn), fork(watchLogOut)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}